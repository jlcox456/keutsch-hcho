%{ /* BCtr.tmc */
  #define BCTR_N_CHANNELS 2
  #define BCTR_N_BIN_SPECS 2
  #define BCTR_NA 1,220
  #define BCTR_NB 100,1
  #define BCTR_NB_TOTAL 101
  #define BCTR_DATA_OFFSET 6
  #define BCTR_BIN_SIZE (BCTR_NB_TOTAL*BCTR_N_CHANNELS+BCTR_DATA_OFFSET)
  /* 208 */
%}
TM typedef unsigned short BCtr_Cts_t { text "%5u"; }
TM typedef unsigned short BCtr_Yes_No { text "%3d" BCtr_Yes_No_txt(); }
TM typedef unsigned short BCtr_OK_FAIL { text "%3d" BCtr_OK_FAIL_txt(); }
TM typedef unsigned short BCtr_NAB_t { text "%1d"; }
TM typedef unsigned long  BCtr_Trigger_t { text "%6ld"; }
TM typedef double BCtr_Volts { text "%5.3lf"; }
TM typedef unsigned short BCtr_DAC_t { text "%5u"; convert BCtr_VOLTS; }
Calibration (BCtr_DAC_t, BCtr_VOLTS) { 0, 0, 65536, 5 }

TM 10 Hz BCtr_Cts_t BCtr_Bins[208];

Group BCtr (BCtr_Bins) {
  BCtr_collect(BCtr_Bins);
}

