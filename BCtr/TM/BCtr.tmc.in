%{
  #define BCTR_N_CHANNELS 2
  #define BCTR_DATA_OFFSET 9
  #define BCTR_BIN_SIZE @NW@
  #define BCTR_NB_TOTAL ((BCTR_BIN_SIZE-BCTR_DATA_OFFSET)/BCTR_N_CHANNELS)
  #define BCtr_Pfresh_text(x) ((x)?" ":"*")
%}
TM typedef unsigned short BCtr_Cts_t { text "%5u"; }
TM typedef unsigned short BCtr_Yes_No { text "%3d" BCtr_Yes_No_txt(); }
TM typedef unsigned short BCtr_OK_FAIL { text "%3d" BCtr_OK_FAIL_txt(); }
TM typedef unsigned short BCtr_NAB_t { text "%1d"; }
TM typedef unsigned long  BCtr_Trigger_t { text "%6ld"; }
TM typedef double BCtr_Volts { text "%5.3lf"; }
TM typedef unsigned short BCtr_DAC_t { text "%5.3lf"; convert BCtr_VOLTS; }
Calibration (BCtr_DAC_t, BCtr_VOLTS) { 0, 0, 65536, 5 }
TM typedef unsigned short BCtr_Pfresh_t { text "%1d" BCtr_Pfresh_text(); }

TM @rate@ Hz BCtr_Cts_t BCtr_Bins[@NW@];
Collect BCtr_Bins { BCtr_collect(BCtr_Bins); }
